---
- name: "Include variable from api roles"
  include_vars:
    file: roles/api/vars/main.yml
    name: api

- name: "Sending docker-compose to server"
  template:
    src: "{{ item }}"
    dest: "{{ working_dir }}/cms/"
  with_items:
    - "docker-compose.yml"

- name: "Removing existing API container"
  docker_service:
    project_src: "{{ working_dir }}/cms"
    state: absent

- name: "Freshing data"
  file:
    path: "{{ project_dir }}/cms"
    state: absent
  become: yes
  become_user: root

- name: "Cloning source from git repository"
  git:
    repo: "{{ cms_repo }}"
    version: "{{ cms_branch }}"
    dest: "{{ project_dir }}/cms/html"
    accept_hostkey: yes
    force: yes
    key_file: "{{ working_dir }}/common/deploy-key"
  become: yes
  become_user: root

- name: "Running composer install"
  command: docker run --rm -v {{ project_dir }}/cms/html:/app -w /app composer install

- name: "Starting cms using docker-compose"
  docker_service:
    project_src: "{{ working_dir }}/cms"
    state: present

- name: "Change owner to www-data:www-data in apache directory"
  command: docker exec {{ container_name }} bash -c 'chown www-data:www-data -R /var/www/html'

- name: "Copying php.ini-production configuration file out of container"
  command: docker cp {{ container_name }}:/usr/local/etc/php/php.ini-production
          {{ working_dir }}/cms/php.ini

- name: "Replace text to php.ini configuration files"
  replace:
    path: "{{ working_dir }}/cms/php.ini"
    regexp: ';extension=curl'
    replace: 'extension=curl'

- name: "Replace text to php.ini configuration files"
  replace:
    path: "{{ working_dir }}/cms/php.ini"
    regexp: ';extension=mbstring'
    replace: 'extension=mbstring'

- name: "Replace text to php.ini configuration files"
  replace:
    path: "{{ working_dir }}/cms/php.ini"
    regexp: ';extension=openssl'
    replace: 'extension=openssl'

- name: "Replace text to php.ini configuration files"
  replace:
    path: "{{ working_dir }}/cms/php.ini"
    regexp: ';extension=pgsql'
    replace: 'extension=pgsql'

- name: "Copying php.ini configuration file to container"
  command: docker cp {{ working_dir }}/cms/php.ini 
          {{ container_name }}:/usr/local/etc/php/conf.d/

- name: "Change owner to root:staff in apache directory"
  command: docker exec {{ container_name }} bash -c 'chown root:staff -R /usr/local/etc/php/conf.d/php.ini'

- name: "Enabling mod rewirte in apache2"
  command: docker exec {{ container_name }} a2enmod rewrite

- name: "Reload apache2 config"
  command: docker exec {{ container_name }} service apache2 reload